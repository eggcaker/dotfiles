# -*-mode: python -*-


$LANG = "en_US.UTF-8"
$LANGUAGE = "en_US.UTF-8"
$LC_ALL = "en_US.UTF-8"
$LC_CTYPE = "en_US.UTF-8"

$XONSH_DEBUG = 1
$XONSH_SHOW_TRACEBACK = False

$LS_COLORS = 'rs=0:di=01;36:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:'


# $PYTHONPATH = [
#     '/usr/local/Cellar/xonsh/0.6.10/libexec/bin',
#     '/usr/local/Cellar/xonsh/0.6.10/libexec/lib/python37.zip',
#     '/usr/local/Cellar/xonsh/0.6.10/libexec/lib/python3.7',
#     '/usr/local/Cellar/xonsh/0.6.10/libexec/lib/python3.7/lib-dynload',
#     '/usr/local/opt/python/Frameworks/Python.framework/Versions/3.7/lib/python3.7',
#     '/usr/local/Cellar/xonsh/0.6.10/libexec/lib/python3.7/site-packages',
#     '/usr/local/lib/python3.6/site-packages']


$XONSH_COLOR_STYLE = "monokai"
$SUPPRESS_BRANCH_TIMEOUT_MESSAGE = True
$WIN_UNICODE_CONSOLE = False
$UPDATE_COMPLETIONS_ON_KEYPRES = True
$AUTO_PUSHD = True

$XONSH_HISTORY_SIZE = (10000, 'commands')
$XONSH_HISTORY_BACKEND = 'sqlite'
$HISTCONTROL = 'ignoredups'

$WORK_NOTE_PATH = "$HOME/src/work/working-notes"
$JAVA_HOME = "/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home"
$ANDROID_SDK_ROOT = "/usr/local/share/android-sdk"
$ANDROID_HOME = "/usr/local/share/android-sdk"
$ANDROID_NDK = "/usr/local/opt/android-ndk/android-ndk-r14b"

$PRODUCT_RELEASE = True
$PLAY_RELEASE = True
aliases['.'] = ['cd', '..']
aliases['..'] = ['cd', '../..']
aliases['...'] = ['cd', '../../..']
aliases['....'] = ['cd', '../../../..']
aliases['a'] = ['cd', '~/Desktop/lab']
aliases['grep'] = 'grep -i --color=always'
aliases['mkdir'] = 'mkdir -p'
aliases['l'] = ['ls', '-G']
aliases['ll'] = ['ls', '-lh', '-F', '-G', '-v']

# git aliases
aliases['gc'] = 'git commit -v'
aliases['gl'] = ['git', 'log', '--oneline', '--all', '--graph', '--decorate', '--color']
aliases['it'] = 'git'
aliases['gi'] = 'git'
aliases['tit'] = 'git'
aliases['sl'] = 'ls'
aliases['last'] = ['git', 'log', '--pretty=format:"%C(yellow)%h%x09%Creset%an%x09%x09%s"', '--decorate', '-10']
aliases['graph'] = "git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --all"
aliases['graph2'] = "git log --graph --all --format=format:'%C(bold yellow)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(bold white)- %an%C(reset)' --abbrev-commit"

# Project', 'related
aliases['pi'] = ['cd', '~/src/work/mandian_server/server/']
aliases['pg'] = ['cd', '~/src/work/pacer_groups/']
aliases['pa'] = ['cd', '~/src/work/pacer_android/']

# ec2 instances
aliases['ec2web'] = ['open', 'http://859974941675.signin.aws.amazon.com/console']
aliases['staging'] = ['ssh', 'ubuntu@staging.dongdong51.com']

aliases['ana_db'] = ['ssh', 'ubuntu@ec2-52-54-224-59.compute-1.amazonaws.com']
aliases['read_db'] = ['ssh', 'ubuntu@ec2-54-81-98-51.compute-1.amazonaws.com']
aliases['ec2p'] = ['ssh', 'ubuntu@ec2-54-208-157-80.compute-1.amazonaws.com']
aliases['ec2q'] = ['ssh', 'ubuntu@ec2-52-91-142-114.compute-1.amazonaws.com']
aliases['ec2r'] = ['ssh', 'ubuntu@ec2-52-91-81-215.compute-1.amazonaws.com']
aliases['ec2t'] = ['ssh', 'ubuntu@ec2-52-91-155-158.compute-1.amazonaws.com']
aliases['ec2u'] = ['ssh', 'ubuntu@ec2-52-90-162-162.compute-1.amazonaws.com']
aliases['ec2v'] = ['ssh', 'ubuntu@ec2-52-90-224-198.compute-1.amazonaws.com']
aliases['ec2w'] = ['ssh', 'ubuntu@ec2-54-88-3-9.compute-1.amazonaws.com']
aliases['ec2x'] = ['ssh', 'ubuntu@ec2-54-174-221-101.compute-1.amazonaws.com']
aliases['ec2y'] = ['ssh', 'ubuntu@ec2-52-90-235-73.compute-1.amazonaws.com']
aliases['ec2z'] = ['ssh', 'ubuntu@ec2-54-89-42-103.compute-1.amazonaws.com']

aliases['dev'] = ['ssh', 'ubuntu@dev.dongdong51.com']
aliases['ci'] = ['ssh', 'ubuntu@do.dongdong51.com']
aliases['watson'] = ['ssh', 'ubuntu@watson.dongdong17.com']
aliases['wx'] = ['ssh', 'ubuntu@47.95.13.171']
aliases['jp1'] = ['ssh', '-i', '~/.ssh/mandiankey_02.pem', 'ubuntu@54.248.219.219']
aliases['jp2'] = ['ssh', '-i', '~/.ssh/mandiankey_02.pem', 'ubuntu@54.248.112.26']
aliases['rdstest'] = ['mysql', '-h', 'pacerfacebooktest.cmd7nqtaffk4.us-east-1.rds.amazonaws.com', '-upwdbroot', '-p', 'pacerdb', '-A']
aliases['rdsprod'] = ['mysql', '-h', 'pacerdbprod.cmd7nqtaffk4.us-east-1.rds.amazonaws.com', '-upwdbroot', '-p', 'pacerdb', '-A']
aliases['coach'] = ['ssh', 'ubuntu@52.2.87.138']
aliases['pgp'] = ['open', 'https://play.google.com/apps/publish']
aliases['aliyun'] = ['open', 'http://signin.aliyun.com/1689961257397308/login.htm']
aliases['s3'] = ['open', 'https://859974941675.signin.aws.amazon.com/console']
aliases['a.pr'] = ['open', 'https://bitbucket.org/pacerhealth/pacer_android/pull-requests/']
aliases['a.stop_pacer'] = ['adb', 'shell', 'am', 'force-stop', 'cc.pacer.androidapp']
aliases['a.stop_dongdong'] = ['adb', 'shell', 'am', 'force-stop', 'com.mandian.android.dongdong']
aliases['p.estimate'] = ['open', 'https://docs.google.com/spreadsheets/d/127iuLOG0B3Ukydv-VsA2WIPVaJzKpYBEF6OOLyXFlGc/edit#gid=1265009236']
aliases['p.backlog'] = ['open', 'https://docs.google.com/spreadsheets/d/1gnnmB42mJ4k1limeYZHgv1tjwx9Nplxjf40xXGnj09U/edit#gid=0']
aliases['p.file'] = ['open', 'https://docs.google.com/spreadsheets/d/1gnnmB42mJ4k1limeYZHgv1tjwx9Nplxjf40xXGnj09U/edit#gid=0']
aliases['p.release'] = ['open', 'https://docs.google.com/spreadsheets/d/1As9Cu8elTzPh9lEqYZeqYCRvkbv1LBcRa9scp42ALeg/edit#gid=0']
aliases['p.interview'] = ['open', 'https://docs.google.com/spreadsheets/d/1RVrRC06Z5D-19aqSNdLGBmofzP_LCEfbFbaEuEx-cKw/edit?usp=drive_web']
aliases['p.weekly_report'] = ['open', 'https://docs.google.com/spreadsheets/d/1YOEGiku_5X8C65KJ14tWvn-M_Mdt6dxe8npiyDUMdN4/edit#gid=0']
aliases['z0'] = ['open', 'https://drive.google.com/drive/folders/1ZuuBYIntK_YOdWtr5aOKKHKduVUjr9SQ']

# Emacs
aliases['e'] = ['emacsclient', '-nw']
aliases['eg'] = ['emacsclient', '-n']
aliases['e.kill'] = ['pkill', '-SIGUSR2 -i', 'Emacs']
aliases['adbs'] = ['adb', 'shell', '/data/home/bin/termux.sh']
aliases['ssh-add'] = ['ssh-add', '-t', '403200m']
aliases['ale'] = ['adb', 'logcat', '-s', 'EB']


def pt(data):
    """Print the tablify data as a orgtabl format."""
    from tabulate import tabulate
    print(tabulate(data[1:], headers=data[0], tablefmt='orgtbl'))


def _a_top_activity():
    """Get the top activity on connected android device."""
    print($(adb shell dumpsys window windows | rg "mCurrentFocus|mFocusedApp"))


def _p_dl():
    """Decrypt the xlog file with python2 inside docker image"""
    docker run  -v $PWD:/tmp/xlog  -ti xlog  /usr/bin/p.decode_log_crypt  /tmp/xlog/

def _p_unzip_s3_log():
 for dir in $(ls).split():
     cd @(dir)
     unzip *.zip
     p.dl *
     rm *.xlog
     rm *.zip
     cd ..

aliases['p.unzip_s3_log'] = _p_unzip_s3_log
aliases['p.dl'] = _p_dl
aliases['a.top_activity'] = _a_top_activity
aliases['a.pc'] = ['adb', 'shell', 'pm', 'clear', 'cc.pacer.androidapp']
aliases['a.dc'] = ['adb', 'shell', 'pm', 'clear', 'com.mandian.android.dongdong']
aliases['a.plog'] = ['adb', 'pull', '/mnt/sdcard/Android/data/cc.pacer.androidapp/files/Download/xlog', '.']

aliases['java9'] = ['jhome', '-v', '9.0.1']
aliases['java8'] = ['jhome', '-v', '1.8.0_141']
aliases['js'] = ['java', '-jar', '/opt/java-libs/try-artifact-0.3.0.jar']


def _redex():
    """ run redex with docker"""
    docker run -it  -v /usr/local/share/android-sdk:/opt/android-sdk-linux -v ./:/redex redex redex ./app-play-vp5.8.1.apk -o ./dex.apk

aliases['redex'] = _redex

aliases['p.load_pacer_data'] = ['source', '~/.dotfiles/bin/segments/load_pacer_activity_data']



def _jshell():
    """ Run the java shell with some external library"""
    docker run -v /opt/java-libs:/tmp -it openjdk:9-jdk bin/jshell --class-path /tmp/joda-time-2.10.jar


aliases['jshell'] = _jshell

# python chart
aliases['imcat'] = lambda args, stdin: print('\033]1337;File=inline=1;height=80%%:%s\a\n' % stdin)
$SHELL_TYPE = 'prompt_toolkit'
$VI_MODE = True

from prompt_toolkit.filters import ViInsertMode
from prompt_toolkit.key_binding.vi_state import InputMode

@events.on_ptk_create
def custom_keybindings(bindings, **kw):
    handler = bindings.add_binding # ptk2
    # handler = bindings.registry.add_binding ptk1

    @handler('f', 'd')
    def exit_insert_mode(event, filter=ViInsertMode):
        vi_state = event.cli.vi_state
        vi_state.input_mode = InputMode.NAVIGATION


$PROMPT_FIELDS['prompt_end'] = lambda: '{RED}$ ' if __xonsh__.history.last_cmd_rtn else '{BLUE}$ '
$XONSH_SHOW_TRACEBACK = False


$PROMPT = '{env_name:{} }{BOLD_BLUE} {cwd}{branch_color}{curr_branch: {}}{NO_COLOR} {BOLD_BLUE}{prompt_end}{NO_COLOR}'


# matplotlib with xonsh
$ITERMPLOT='rv'
$ITERMPLOT_LINES=10
$ITERMPLOT_FRAMES=40
$MPLBACKEND="module://itermplot"


source-bash ~/.private

# Coloured man page support
# using 'less' env vars (format is '\E[<brightness>;<colour>m')
$LESS_TERMCAP_mb = "\033[01;31m"     # begin blinking
$LESS_TERMCAP_md = "\033[01;31m"     # begin bold
$LESS_TERMCAP_me = "\033[0m"         # end mode
$LESS_TERMCAP_so = "\033[01;44;36m"  # begin standout-mode (bottom of screen)
$LESS_TERMCAP_se = "\033[0m"         # end standout-mode
$LESS_TERMCAP_us = "\033[00;36m"     # begin underline
$LESS_TERMCAP_ue = "\033[0m"         # end underline


$BASE16_SHELL = $HOME + "/.config/base16-shell/"

# XONSH WIZARD START
xontrib load coreutils vox z mpl base16_shell #fzf-widgets
# XONSH WIZARD END




# $fzf_history_binding = Keys.ControlR
# $fzf_ssh_binding = Keys.ControlS
