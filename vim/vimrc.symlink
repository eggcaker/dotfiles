set nocompatible
set encoding=utf-8
set hidden
filetype plugin indent on
"setlocal spell
"set spelllang=en_us
inoremap <C-l> <c-g>u<Esc>[s1z=`]a<c-g>u

"let $TMPDIR = "/var/folders/tl/cwny95z539dcv_n2ymqfn6qh0000gn/T/"

let maplocalleader = " "
syntax on

" Specify a directory for plugins
" - For Neovim: stdpath('data') . '/plugged'
" - Avoid using standard Vim directory names like 'plugin'
call plug#begin('~/.vim/plugged')

" Make sure you use single quotes

" Shorthand notation; fetches https://github.com/junegunn/vim-easy-align
Plug 'junegunn/vim-easy-align'

" Multiple Plug commands can be written in a single line using | separators
Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
let g:UltiSnipsExpandTrigger = '<tab>'
let g:UltiSnipsJumpForwardTrigger = '<tab>'
let g:UltiSnipsJumpBackwardTrigger = '<s-tab>'
 
" On-demand loading
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }

" Plugin outside ~/.vim/plugged with post-update hook
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }

Plug 'lervag/vimtex'

Plug 'KeitaNakamura/tex-conceal.vim',{'for':'tex'}
set conceallevel=2
let g:tex_conceal='abdmg'
hi Conceal ctermbg=none

Plug 'dylanaraps/wal.vim'

" Initialize plugin system
call plug#end()

" Tex options 
let g:tex_flavor='xelatex'
let g:vimtex_view_method='skim'
let g:vimtex_view_automatic=1
let g:vimtex_quickfix_mode=0
let g:vimtex_quickfix_latexlog ={
			\ 'font' : 0,
            \ 'overfull' : 0,
            \ 'underfull' : 0,
            \ 'packages' : {
            \   'default' : 0,
            \ },
            \ }

let g:vimtex_compiler_latexmk = {
			\ 'executable' : 'latexmk',
			\ 'options' : [
			\   '-xelatex',
			\   '-file-line-error',
			\   '-synctex=1',
			\   '-interaction=nonstopmode',
			\ ],
			\}
 
" wal options 
colorscheme wal
set background=dark
 


set synmaxcol=2048                " Don't syntax highlight super-long lines (for performance)
set autoindent                    " automatically indent lines and try to do it intelligently
set smartindent
set backspace=indent,eol,start    " backspace behaves 'normally'

" set softtabstop=2
set smartindent
set shiftwidth=4                  " [2]
set tabstop=4                     " tab is 4 spaces [2]
set noexpandtab                   " use tabs

set textwidth=0
set nolinebreak
set nowrap

set virtualedit=all               " Allow the cursor to go in to 'invalid' places

set hlsearch                      " highlight search terms
set incsearch                     " search incrementally
set ignorecase                    " ignore case in searches...
set smartcase                     " ...but not really. Case sensitive if capitals are included.
set wrapscan                      " Set the search scan to wrap around the file
